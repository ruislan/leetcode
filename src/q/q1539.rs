use crate::q::Solution;

impl Solution {
    pub fn find_kth_positive(arr: Vec<i32>, k: i32) -> i32 {
        // 方法1
        // 设定前一个数字为1，
        // 取出数组当前数字，前去前一个数字得到差值，
        // 差值如果小于k，k减去差值，重复上述
        // 差值如果大于k, 差值减去k即是结果
        // 差值如果等于k，直接返回差值
        // 令前一个数字=当前数字，当前数组向前滚动

        // 方法2
        // 方法1最差的情况就是要迭代整个数组
        // 因为严格升序，我们可以采用二分查找法
        // 让中间点比它的索引进行比较之后再与k进行比较
        0
    }
}